// <auto-generated />
using System;
using FitnessTrackingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessTrackingSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230523094700_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessTrackingSystem.Models.Excercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EquipmentRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Excercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentRequired = "Barbell",
                            MuscleGroup = "Legs",
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 2,
                            EquipmentRequired = "Barbell",
                            MuscleGroup = "Chest",
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 3,
                            EquipmentRequired = "Barbell",
                            MuscleGroup = "Back",
                            Name = "Bent Over Row"
                        },
                        new
                        {
                            Id = 4,
                            EquipmentRequired = "Barbell",
                            MuscleGroup = "Shoulders",
                            Name = "Overhead Press"
                        },
                        new
                        {
                            Id = 5,
                            EquipmentRequired = "Barbell",
                            MuscleGroup = "Back",
                            Name = "Deadlift"
                        });
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.ExcerciseRoutine", b =>
                {
                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.Property<int>("ExcerciseId")
                        .HasColumnType("int");

                    b.HasKey("RoutineId", "ExcerciseId");

                    b.HasIndex("ExcerciseId");

                    b.ToTable("ExcerciseRoutines");

                    b.HasData(
                        new
                        {
                            RoutineId = 1,
                            ExcerciseId = 1
                        },
                        new
                        {
                            RoutineId = 1,
                            ExcerciseId = 2
                        },
                        new
                        {
                            RoutineId = 1,
                            ExcerciseId = 3
                        },
                        new
                        {
                            RoutineId = 2,
                            ExcerciseId = 1
                        },
                        new
                        {
                            RoutineId = 2,
                            ExcerciseId = 4
                        },
                        new
                        {
                            RoutineId = 2,
                            ExcerciseId = 5
                        });
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.NutritionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CaloriesGoal")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.ProgressTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BodyFatPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ProgressTrackings");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.Routine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Set A of heavy lifting focused on gaining more strength in shorter amout of time.",
                            Name = "Strong 5x5 A"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Set B of heavy lifting focused on gaining more strength in shorter amout of time.",
                            Name = "Strong 5x5 B"
                        });
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CaloriesBurned")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.ExcerciseRoutine", b =>
                {
                    b.HasOne("FitnessTrackingSystem.Models.Excercise", "Excercise")
                        .WithMany("ExcerciseRoutines")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessTrackingSystem.Models.Routine", "Routine")
                        .WithMany("ExcerciseRoutines")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.NutritionPlan", b =>
                {
                    b.HasOne("FitnessTrackingSystem.Models.User", "User")
                        .WithMany("NutritionPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.ProgressTracking", b =>
                {
                    b.HasOne("FitnessTrackingSystem.Models.User", "User")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.Workout", b =>
                {
                    b.HasOne("FitnessTrackingSystem.Models.Routine", "Routine")
                        .WithMany("Workouts")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessTrackingSystem.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.Excercise", b =>
                {
                    b.Navigation("ExcerciseRoutines");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.Routine", b =>
                {
                    b.Navigation("ExcerciseRoutines");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("FitnessTrackingSystem.Models.User", b =>
                {
                    b.Navigation("NutritionPlans");

                    b.Navigation("ProgressTrackings");

                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
